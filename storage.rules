rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // User profile images
    match /users/{userId}/profile/{fileName} {
      // Users can read/write their own profile images
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Validate file type and size for profile images
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.size < 5 * 1024 * 1024 // 5MB limit
        && request.resource.contentType.matches('image/.*'); // Only images
    }
    
    // Task attachments
    match /users/{userId}/tasks/{taskId}/attachments/{fileName} {
      // Users can read/write their own task attachments
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Validate file size and type for attachments
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.size < 20 * 1024 * 1024 // 20MB limit
        && (request.resource.contentType.matches('image/.*') // Images
            || request.resource.contentType.matches('application/pdf') // PDFs
            || request.resource.contentType.matches('text/.*') // Text files
            || request.resource.contentType.matches('application/msword') // Word docs
            || request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document')); // Word docs
    }
    
    // Shared files (for future team features)
    match /shared/{teamId}/{fileName} {
      // Team members can read shared files
      allow read: if request.auth != null;
      
      // Only authenticated users can write with size limits
      allow write: if request.auth != null 
        && request.resource.size < 50 * 1024 * 1024; // 50MB limit for shared files
    }
    
    // Temporary uploads (for processing)
    match /temp/{userId}/{fileName} {
      // Users can upload temporary files
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.size < 100 * 1024 * 1024; // 100MB limit
      
      // Temporary files can be read by the uploader for a limited time
      allow read: if request.auth != null && request.auth.uid == userId;
    }
    
    // Public assets (read-only)
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if false;
    }
    
    // Admin uploads
    match /admin/{allPaths=**} {
      allow read, write: if request.auth != null 
        && request.auth.token.admin == true;
    }
    
    // System files (no access)
    match /system/{allPaths=**} {
      allow read, write: if false;
    }
    
    // Default deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}